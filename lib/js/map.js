const xMax = 50;
const yMax = 25;

const coords = [
  [],
  [7],
  [5, 6],
  [5, 6],
  [5, 6],
  [5, 6, 7, 8],
  [5, 6, 7, 8, 9, 10],
  [4, 5, 6, 7, 8, 9, 10, 11],
  [4, 5, 6, 7, 8, 9, 10, 11, 12],
  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
  [5, 6, 7, 8, 9, 10, 11, 13, 14],
  [2, 3, 5, 6, 8, 9, 10, 11, 14, 16, 17],
  [2, 4, 9, 10, 11, 12, 15, 16, 17, 18, 22, 23],
  [2, 4, 5, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22],
  [3, 5, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21],
  [2, 3, 8, 16, 17, 18, 19, 20],
  [2, 3, 4, 17, 18, 19],
  [1, 2, 3, 4, 5, 6, 17],
  [1, 2, 3, 4, 5],
  [1, 2, 3],
  [2],
  [13, 14, 15],
  [9, 10, 12, 13, 14, 15, 16],
  [7, 9, 10, 12, 13, 14, 15, 16],
  [8, 9, 12, 13, 14, 15, 16, 17],
  [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20],
  [4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21],
  [4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20],
  [5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18],
  [6, 7, 8, 9, 11, 12, 13, 15],
  [6, 7, 8, 9, 10, 11, 13],
  [5, 6, 7, 8, 9, 10, 11, 12],
  [4, 5, 6, 7, 8, 9, 10, 11, 12],
  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
  [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
  [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21],
  [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 21],
  [4, 5, 6, 7, 8, 9, 10, 14, 18, 19, 20, 21],
  [4, 5, 6, 7, 8, 9, 12, 19, 20, 21, 22],
  [4, 5, 6, 7, 8, 11, 18, 19, 20, 21, 22],
  [4, 5, 6, 7, 20, 21],
  [4, 5, 6, 9],
  [5, 6, 7, 8],
  [5, 6],
  [6],
  [],
  []
]

const latLongToCoords = (laloCoords) => {
  return laloCoords.map((lalo) => {
    let y = Math.round((lalo.x + 90) / 180 * 25);
    let x = Math.round((lalo.y + 180) / 360 * 50);
    return {x: x, y: y};
  });
}

const map = () => {
  let m = coords.map((x, i) => {
    let v = {};
    v.bin = i;
    v.bins = [];
    for (let i = 0; i < 25; i++) {
      if (x.indexOf(24 - i) > -1) {
        //v.bins.push({bin: i * 150, count: Math.floor(Math.random() * (100 - 15)) + 15});
        v.bins.push({bin: i * 150, count: 15});
      } else {
        v.bins.push({bin: i * 150, count: 0});
      }
    }
    return v;
  });
  return m;
}

export const blinkMap = (laloCoords) => {
  let xy = latLongToCoords(laloCoords);
  let m = coords.map((x, i) => {
    let v = {};
    v.bin = i;
    v.bins = [];
    for (let i = 0; i < 25; i++) {
      if (x.indexOf(24 - i) > -1) {
        let blink = false;
        xy.forEach(c => {
          if (c.x === v.bin && c.y === (24 - i)) {
            v.bins.push({bin: i * 150, count: 50});
            blink = true;
          }
        });
        if (!blink) {
          v.bins.push({bin: i * 150, count: 15});
        }
      } else {
        v.bins.push({bin: i * 150, count: 0});
      }
    }
    return v;
  });
  return m;
}

export default map();
